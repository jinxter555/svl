operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const Nil; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const Nil&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const Nil&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {0}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {0}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 0; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
  470 | const astexpr_u_ptr& OperandUPtr::operator()(T& v) { return nullptr; }
      |                                                             ^~~~~~~
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const bool; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const bool&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const bool&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {1}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {1}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 1; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const std::__cxx11::basic_string<char>; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {2}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {2}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 2; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const Number; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const Number&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const Number&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {3}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {3}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 3; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const ControlFlow; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const ControlFlow&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const ControlFlow&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {4}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {4}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 4; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const AstOpCode; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const AstOpCode&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const AstOpCode&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {5}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {5}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 5; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const OperandErrorCode; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const OperandErrorCode&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const OperandErrorCode&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {6}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {6}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 6; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const OperandStatusCode; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const OperandStatusCode&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const OperandStatusCode&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {7}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {7}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 7; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const OperandType; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const OperandType&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const OperandType&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {8}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {8}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 8; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = SvlmAst* const; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {SvlmAst* const&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {SvlmAst* const&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {9}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {9}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 9; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = AstExpr* const; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {AstExpr* const&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {AstExpr* const&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {10}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {10}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 10; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const std::shared_ptr<AstExpr>; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const std::shared_ptr<AstExpr>&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const std::shared_ptr<AstExpr>&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {11}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {11}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 11; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
operand.cc: In instantiation of ‘const astexpr_u_ptr& OperandUPtr::operator()(T&) [with T = const std::unique_ptr<AstExpr>; astexpr_u_ptr = std::unique_ptr<AstExpr>]’:
/usr/include/c++/11/bits/invoke.h:61:36:   required from ‘constexpr _Res std::__invoke_impl(std::__invoke_other, _Fn&&, _Args&& ...) [with _Res = const std::unique_ptr<AstExpr>&; _Fn = OperandUPtr; _Args = {const std::unique_ptr<AstExpr, std::default_delete<AstExpr> >&}]’
/usr/include/c++/11/bits/invoke.h:96:40:   required from ‘constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = OperandUPtr; _Args = {const std::unique_ptr<AstExpr, std::default_delete<AstExpr> >&}; typename std::__invoke_result<_Functor, _ArgTypes>::type = const std::unique_ptr<AstExpr>&]’
/usr/include/c++/11/variant:1016:24:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {12}]’
/usr/include/c++/11/variant:1032:28:   required from ‘static constexpr auto std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply() [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {12}]’
/usr/include/c++/11/variant:968:56:   required from ‘static constexpr void std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...), __dimensions ...>, std::integer_sequence<long unsigned int, __indices ...> >::_S_apply_single_alt(_Tp&, _Tp*) [with bool __do_cookie = false; long unsigned int __index = 12; _Tp = std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&> (*)(OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&)>; _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr&&; long unsigned int ...__dimensions = {13}; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; long unsigned int ...__indices = {}]’
/usr/include/c++/11/variant:947:48:   required from ‘constexpr const _Array_type std::__detail::__variant::__gen_vtable<std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>, OperandUPtr&&, const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&>::_S_vtable’
/usr/include/c++/11/variant:1724:45:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = std::__detail::__variant::__deduce_visit_result<const std::unique_ptr<AstExpr>&>; _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}]’
/usr/include/c++/11/variant:1761:34:   required from ‘constexpr std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> std::visit(_Visitor&&, _Variants&& ...) [with _Visitor = OperandUPtr; _Variants = {const std::variant<Nil, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Number, ControlFlow, AstOpCode, OperandErrorCode, OperandStatusCode, OperandType, SvlmAst*, AstExpr*, std::shared_ptr<AstExpr>, std::unique_ptr<AstExpr, std::default_delete<AstExpr> > >&}; std::__detail::__variant::__visit_result_t<_Visitor, _Variants ...> = const std::unique_ptr<AstExpr>&]’
operand.cc:387:14:   required from here
operand.cc:470:61: warning: returning reference to temporary [-Wreturn-local-addr]
