Makefile:85: warning: overriding recipe for target 'ast.o'
Makefile:52: warning: ignoring old recipe for target 'ast.o'
g++ -std=c++17 -g -o /dev/shm/main.out main.cc asm_parser.cc asm_scanner.cc opcode.o my_helpers.o \
assembler.o assembly.o commandline.o assembler_interactive.o  vm.o prompt.o  \
svlm_scanner.cc svlm_parser.cc tree.o  svlm_interactive.o svlm_lang.o \
printer_any.o number.o operand.o tuple.o atom.o ast.o \
-lreadline
svlm_grammar.y: In member function ‘virtual int vslast::SvlmParser::parse()’:
svlm_grammar.y:153:77: error: no matching function for call to ‘get<0>(std::shared_ptr<MapExprAst>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:223:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)’
  223 |     get(pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:223:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:228:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)’
  228 |     get(pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:228:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:233:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)’
  233 |     get(const pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:233:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:238:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)’
  238 |     get(const pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:238:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:247:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)’
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:247:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:252:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)’
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:252:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:257:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)’
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:257:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:262:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)’
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:262:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:267:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)’
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:267:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:272:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)’
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:272:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:277:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)’
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:277:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:282:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)’
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:282:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:361:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)’
  361 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:361:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:369:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)’
  369 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:369:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:377:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)’
  377 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:377:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:385:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)’
  385 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:385:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1393:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&)’
 1393 |     get(tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1393:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1399:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(const std::tuple<_UTypes ...>&)’
 1399 |     get(const tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1399:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1405:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >&& std::get(std::tuple<_UTypes ...>&&)’
 1405 |     get(tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1405:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1414:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >&& std::get(const std::tuple<_UTypes ...>&&)’
 1414 |     get(const tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1414:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1449:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::tuple<_UTypes ...>&)’
 1449 |     get(tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1449:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::tuple<_UTypes ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1460:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::tuple<_UTypes ...>&&)’
 1460 |     get(tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1460:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::tuple<_UTypes ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1471:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::tuple<_UTypes ...>&)’
 1471 |     get(const tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1471:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::tuple<_UTypes ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1483:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::tuple<_UTypes ...>&&)’
 1483 |     get(const tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1483:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::tuple<_UTypes ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1676:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >& std::get(std::variant<_Types ...>&)’
 1676 |     get(variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1676:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1687:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >&& std::get(std::variant<_Types ...>&&)’
 1687 |     get(variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1687:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1698:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >& std::get(const std::variant<_Types ...>&)’
 1698 |     get(const variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1698:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1709:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >&& std::get(const std::variant<_Types ...>&&)’
 1709 |     get(const variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1709:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1117:20: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::variant<_Types ...>&)’
 1117 |     constexpr _Tp& get(variant<_Types...>& __v)
      |                    ^~~
/usr/include/c++/11/variant:1117:20: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::variant<_Types ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1126:21: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::variant<_Types ...>&&)’
 1126 |     constexpr _Tp&& get(variant<_Types...>&& __v)
      |                     ^~~
/usr/include/c++/11/variant:1126:21: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::variant<_Types ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1136:26: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::variant<_Types ...>&)’
 1136 |     constexpr const _Tp& get(const variant<_Types...>& __v)
      |                          ^~~
/usr/include/c++/11/variant:1136:26: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::variant<_Types ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1145:27: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::variant<_Types ...>&&)’
 1145 |     constexpr const _Tp&& get(const variant<_Types...>&& __v)
      |                           ^~~
/usr/include/c++/11/variant:1145:27: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:77: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::variant<_Types ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                             ^                                                        
svlm_grammar.y:153:77: note:   expected a type, got ‘0’
svlm_grammar.y:153:147: error: no matching function for call to ‘get<1>(std::shared_ptr<MapExprAst>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:223:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)’
  223 |     get(pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:223:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:228:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)’
  228 |     get(pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:228:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:233:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)’
  233 |     get(const pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:233:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:238:5: note: candidate: ‘template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)’
  238 |     get(const pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/usr/include/c++/11/utility:238:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::pair<_Tp1, _Tp2>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:247:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)’
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:247:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:252:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)’
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:252:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:257:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)’
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:257:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:262:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)’
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:262:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:267:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)’
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:267:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:272:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)’
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:272:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:277:5: note: candidate: ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)’
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:277:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:38,
                 from svlm_grammar.y:5:
/usr/include/c++/11/utility:282:5: note: candidate: ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)’
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/usr/include/c++/11/utility:282:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:361:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)’
  361 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:361:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:369:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)’
  369 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:369:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:377:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)’
  377 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:377:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from /usr/include/c++/11/tuple:39,
                 from svlm_grammar.y:5:
/usr/include/c++/11/array:385:5: note: candidate: ‘template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)’
  385 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/usr/include/c++/11/array:385:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::array<_Tp, _Nm>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1393:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(std::tuple<_UTypes ...>&)’
 1393 |     get(tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1393:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1399:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >& std::get(const std::tuple<_UTypes ...>&)’
 1399 |     get(const tuple<_Elements...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1399:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1405:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >&& std::get(std::tuple<_UTypes ...>&&)’
 1405 |     get(tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1405:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1414:5: note: candidate: ‘template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_UTypes ...> >&& std::get(const std::tuple<_UTypes ...>&&)’
 1414 |     get(const tuple<_Elements...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1414:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::tuple<_UTypes ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1449:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::tuple<_UTypes ...>&)’
 1449 |     get(tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1449:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::tuple<_UTypes ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1460:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::tuple<_UTypes ...>&&)’
 1460 |     get(tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1460:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::tuple<_UTypes ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1471:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::tuple<_UTypes ...>&)’
 1471 |     get(const tuple<_Types...>& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1471:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::tuple<_UTypes ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from svlm_grammar.y:5:
/usr/include/c++/11/tuple:1483:5: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::tuple<_UTypes ...>&&)’
 1483 |     get(const tuple<_Types...>&& __t) noexcept
      |     ^~~
/usr/include/c++/11/tuple:1483:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::tuple<_UTypes ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1676:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >& std::get(std::variant<_Types ...>&)’
 1676 |     get(variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1676:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1687:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >&& std::get(std::variant<_Types ...>&&)’
 1687 |     get(variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1687:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1698:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >& std::get(const std::variant<_Types ...>&)’
 1698 |     get(const variant<_Types...>& __v)
      |     ^~~
/usr/include/c++/11/variant:1698:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1709:5: note: candidate: ‘template<long unsigned int _Np, class ... _Types> constexpr std::variant_alternative_t<_Np, std::variant<_Types ...> >&& std::get(const std::variant<_Types ...>&&)’
 1709 |     get(const variant<_Types...>&& __v)
      |     ^~~
/usr/include/c++/11/variant:1709:5: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: note:   ‘std::shared_ptr<MapExprAst>’ is not derived from ‘const std::variant<_Types ...>’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1117:20: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::variant<_Types ...>&)’
 1117 |     constexpr _Tp& get(variant<_Types...>& __v)
      |                    ^~~
/usr/include/c++/11/variant:1117:20: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp& std::get(std::variant<_Types ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1126:21: note: candidate: ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::variant<_Types ...>&&)’
 1126 |     constexpr _Tp&& get(variant<_Types...>&& __v)
      |                     ^~~
/usr/include/c++/11/variant:1126:21: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr _Tp&& std::get(std::variant<_Types ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1136:26: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::variant<_Types ...>&)’
 1136 |     constexpr const _Tp& get(const variant<_Types...>& __v)
      |                          ^~~
/usr/include/c++/11/variant:1136:26: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp& std::get(const std::variant<_Types ...>&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
In file included from vm_type.hh:2,
                 from lang.hh:2,
                 from svlm_grammar.y:6:
/usr/include/c++/11/variant:1145:27: note: candidate: ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::variant<_Types ...>&&)’
 1145 |     constexpr const _Tp&& get(const variant<_Types...>&& __v)
      |                           ^~~
/usr/include/c++/11/variant:1145:27: note:   template argument deduction/substitution failed:
svlm_grammar.y:153:147: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _Tp, class ... _Types> constexpr const _Tp&& std::get(const std::variant<_Types ...>&&)’
  153 |     $1->add(std::get<0>($1), std::get<1>($1));
      |                                                                                                                                                   ^                                                        
svlm_grammar.y:153:147: note:   expected a type, got ‘1’
make: *** [Makefile:9: main.out] Error 1
